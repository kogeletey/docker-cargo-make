name: docker publish registry

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on: push

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # get a cargo-make version by github api, thanks https://stackoverflow.com/questions/66381595/trying-to-parse-json-output-in-a-github-action
      - id: ghv
        run: |
          version=$(curl --silent "https://api.github.com/repos/sagiegurari/cargo-make/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          echo "::set-output name=rversion::$version"
      # checked version correctly, disable
      #      - run: echo ${{ steps.ghv.outputs.rversion }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.ghv.outputs.rversion }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "GITHUB_SHA=${GITHUB_SHA}"
            "GITHUB_REF=${GITHUB_REF}"
            "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"
            "CARGO_MAKE_VERSION=${{ steps.ghv.outputs.rversion }}"
